#version: "3.9"
#services:
#  front:
#    image: sermalenk/skypro-front:base
#    ports:
#      - 8080:80
#    depends_on:
#      - api
#  api:
#    build:
#      context: .
#    depends_on:
#      postgres:
#        condition: service_healthy
#      migrations:
#        condition: service_completed_successfully
#    volumes:
#      - ./env:/planner/.docker_env
#  migrations:
#    build:
#      context: .
#    depends_on:
#      postgres:
#        condition: service_healthy
#    environment:
#      DB_HOST: postgres
#    volumes:
#      - ./env:/planner/.docker_env
#    command: python3 manage.py migrate
#  postgres:
#    image: postgres:latest
#    environment:
#      POSTGRES_PASSWORD: 123
#      POSTGRES_DB: td
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 5s
#      timeout: 5s
#      retries: 5
#    volumes:
#      - ./postgres-data:/var/lib/postgresql/data

version: "3.9"

services:
  api:
    build: .
    ports:
      - 8000:8000
    env_file:
      - ./.env
    command: >
      sh -c "python manage.py makemigrations core &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      postgres:
        condition: service_healthy #просто порядок запуска
    volumes:
      - .:/app/ #volumes мы можем «сохранить» файлы в конкретной директории, и при удалении контейнера все файлы сохранятся.

  postgres:
    image: postgres:14.2-alpine
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
    postgres-data: